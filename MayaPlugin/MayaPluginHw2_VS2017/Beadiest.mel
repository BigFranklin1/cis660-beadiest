global proc meshReduction() {
	//expandPolyGroupSelection; 
	polyCleanupArgList 4 { "0","1","1","0","0","0","0","0","0","1e-05","1","1e-05","0","1e-05","0","1","0","0" };
	selectMode -o;
	doPerformPolyReduceArgList 3 {"1","0","0","1","1","1","1","1","1","0.5","0.5","0.5","0.5","0.5","0.5","0","0.01","0","1","0","0.0","1","1","","1","1","50","0","0","1","0","0","0","0"};
}

global proc meshBeautification() {
    beautification;
	string $obj[] = `ls -sl`;
	$item = $obj[0];
	polyAverageVertex -i 50 -ch 1 $item;
	selectMode -o;
}

global proc convert2Hex() {
    toHex;
}
global proc convert2HexNode() {
	string $obj[] = `ls -sl`;
	$item = $obj[0];

	$instancer = `instancer`;
   	connectAttr ($item+".matrix") ($instancer + ".inputHierarchy[0]"); 
	//$mesh = createNode mesh -n newMesh ;
	$mesh = `createNode mesh`;
    $hexNode = `createNode ToHexNode`;
	sets -add initialShadingGroup $mesh;
	connectAttr ($item+".outMesh") ($hexNode + ".inputMesh");
	connectAttr ($hexNode + ".outputMesh") ($mesh+".inMesh");
	select $mesh;
}

global proc hex2Bead() {
	string $obj[] = `ls -sl`;
	$item = $obj[0];

	$instancer = `instancer`;
   	connectAttr ($item+".matrix") ($instancer + ".inputHierarchy[0]"); 
	//$mesh = createNode mesh -n newMesh ;
	$mesh = `createNode mesh`;
    $hexNode = `createNode ToBeadNode`;
	sets -add initialShadingGroup $mesh;
	connectAttr ($item+".outMesh") ($hexNode + ".inputMesh");
	connectAttr ($hexNode + ".outputMesh") ($mesh+".inMesh");
	select $mesh;
}


global string $gMainWindow;
menu -label "Beadiest" -parent $gMainWindow -tearOff on; 
menuItem -label "Mesh Reduction" -command ("meshReduction");
menuItem -label "Mesh Beautification" -command ("meshBeautification");
//menuItem -label "To Hex" -command ("convert2Hex");
menuItem -label "Tri To Hex Node" -command ("convert2HexNode");
menuItem -label "Hex To Bead Node" -command ("hex2Bead");
